{"ast":null,"code":"var _jsxFileName = \"/Users/student_ma109/Desktop/backendreact/joke-for-fun/src/components/InitialCall.js\";\nimport React, { Component } from 'react';\nimport { v4 as uuid } from 'uuid';\nimport axios from 'axios';\nexport default class InitialCall extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoading: true,\n      jokes: [],\n      joke: '',\n      punchline: ''\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const joke = {\n        id: +uuid(),\n        firstName: this.state.joke,\n        lastName: this.state.punchline,\n        email: 'add general'\n      };\n      axios.post('/first_api/v1/employees', joke);\n      this.setState({\n        joke: '',\n        punchline: ''\n      });\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.editJoke = (id, joke) => {\n      console.log(id, joke);\n      axios.put(`/first_api/v1//employees/${id}`);\n    };\n  }\n\n  async componentDidMount() {\n    /**\n     * first check if a record exist\n     * if it does\n     *  retrieve from DB\n     *  set the state\n     * else\n     *  populate DB with all jokes *\n     *  set the state *\n     */\n    axios.get('https://official-joke-api.appspot.com/random_ten').then(res => {\n      const allJokes = res.data.map(jokesObj => {\n        const jkContent = {\n          // create record\n          id: jokesObj.id,\n          firstName: jokesObj.setup,\n          lastName: jokesObj.punchline,\n          email: jokesObj.type\n        };\n        axios.post('/first_api/v1/employees', jkContent); // post to DB\n\n        return jkContent;\n      });\n      this.setState({\n        jokes: allJokes\n      });\n    });\n  }\n\n  render() {\n    // const {employees, isLoading} = this.state;\n    console.log(this.state); // if (isLoading) {\n    //   return <p>Loading...</p>;\n    // }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Initial\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }\n    }, \"  \"), this.state.jokes.map(item => /*#__PURE__*/React.createElement(\"p\", {\n      key: item.id,\n      onClick: () => this.editJoke(item.id, item.firstName),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }, item.firstName, \" \")), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"joke\",\n      value: this.state.joke,\n      placeholder: \"Add Your Joke\",\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"punchline\",\n      value: this.state.punchline,\n      placeholder: \"Add Punchline\",\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }\n    }, \"add\")));\n  }\n\n}","map":{"version":3,"sources":["/Users/student_ma109/Desktop/backendreact/joke-for-fun/src/components/InitialCall.js"],"names":["React","Component","v4","uuid","axios","InitialCall","state","isLoading","jokes","joke","punchline","onSubmit","e","preventDefault","id","firstName","lastName","email","post","setState","onChange","target","name","value","editJoke","console","log","put","componentDidMount","get","then","res","allJokes","data","map","jokesObj","jkContent","setup","type","render","item"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { v4 as uuid } from 'uuid';\nimport axios from 'axios';\n\nexport default class InitialCall extends Component {\n  state = {\n    isLoading: true,\n    jokes: [],\n    joke: '',\n    punchline: ''\n  };\n\n  async componentDidMount() {\n    /**\n     * first check if a record exist\n     * if it does\n     *  retrieve from DB\n     *  set the state\n     * else\n     *  populate DB with all jokes *\n     *  set the state *\n     */\n    axios.get('https://official-joke-api.appspot.com/random_ten')\n      .then(res => {\n        const allJokes = res.data.map(jokesObj => {\n          const jkContent = { // create record\n            id: jokesObj.id,\n            firstName: jokesObj.setup,\n            lastName: jokesObj.punchline,\n            email : jokesObj.type\n          }\n          axios.post('/first_api/v1/employees', jkContent) // post to DB\n          return jkContent\n        })\n\n        this.setState({\n          jokes: allJokes\n        })\n      })\n\n  }\n  onSubmit = (e) => {\n    e.preventDefault()\n    const joke = {\n      id: +uuid(),\n      firstName: this.state.joke,\n      lastName: this.state.punchline,\n      email : 'add general'\n    }\n    axios.post('/first_api/v1/employees', joke) \n    this.setState({\n      joke: '',\n      punchline: ''\n    })\n  }\n\n  onChange = (e) => {\n    this.setState({\n      [e.target.name] : e.target.value\n    })\n  }\n\n  editJoke = (id, joke) => {\n    console.log(id, joke)\n    axios.put(`/first_api/v1//employees/${id}`)\n  \n  }\n\n\n  render() {\n    // const {employees, isLoading} = this.state;\n    console.log(this.state)\n    // if (isLoading) {\n    //   return <p>Loading...</p>;\n    // }\n\n    return (\n      \n      <div className=\"Initial\">\n      <h1>  </h1>\n\n      {\n        this.state.jokes.map(item => \n          <p key={item.id} onClick={() => this.editJoke(item.id, item.firstName)}>{item.firstName} </p> \n        )\n      }\n        <form onSubmit={this.onSubmit}>\n          <input \n            type='text' \n            name='joke' \n            value={this.state.joke} \n            placeholder=\"Add Your Joke\"\n            onChange={this.onChange}\n            />\n          <input \n            type='text' \n            name='punchline' \n            value={this.state.punchline} \n            placeholder=\"Add Punchline\"\n            onChange={this.onChange}\n            />\n          <button>add</button>\n        </form>\n\n\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}