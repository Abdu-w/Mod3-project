{"ast":null,"code":"var _jsxFileName = \"/Users/student_ma109/Desktop/backendreact/joke-for-fun/src/components/InitialCall.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nexport default class InitialCall extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoading: true,\n      jokes: []\n    };\n  }\n\n  async componentDidMount() {\n    /**\n     * first check if a record exist\n     * if it does\n     *  retrieve from DB\n     *  set the state\n     * else\n     *  populate DB with all jokes *\n     *  set the state *\n     */\n    axios.get('https://official-joke-api.appspot.com/random_ten').then(res => {\n      const allJokes = res.data.map(jokesObj => {\n        const jkContent = {\n          // create record\n          id: jokesObj.id,\n          firstName: jokesObj.setup,\n          lastName: jokesObj.punchline,\n          email: jokesObj.type\n        };\n        axios.post('/first_api/v1/employees', jkContent); // post to DB\n\n        return jkContent;\n      });\n      this.setState({\n        jokes: allJokes\n      });\n    });\n  }\n\n  render() {\n    // const {employees, isLoading} = this.state;\n    console.log(this.state); // if (isLoading) {\n    //   return <p>Loading...</p>;\n    // }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Initial\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, \"  \"), this.state.jokes.map(item => /*#__PURE__*/React.createElement(\"p\", {\n      key: item.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    }, item.firstName, \" \")), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.createJoke,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, \"add someone\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/student_ma109/Desktop/backendreact/joke-for-fun/src/components/InitialCall.js"],"names":["React","Component","axios","InitialCall","state","isLoading","jokes","componentDidMount","get","then","res","allJokes","data","map","jokesObj","jkContent","id","firstName","setup","lastName","punchline","email","type","post","setState","render","console","log","item","createJoke"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,WAAN,SAA0BF,SAA1B,CAAoC;AAAA;AAAA;AAAA,SACjDG,KADiD,GACzC;AACNC,MAAAA,SAAS,EAAE,IADL;AAENC,MAAAA,KAAK,EAAE;AAFD,KADyC;AAAA;;AAOjD,QAAMC,iBAAN,GAA0B;AACxB;;;;;;;;;AAUAL,IAAAA,KAAK,CAACM,GAAN,CAAU,kDAAV,EACGC,IADH,CACQC,GAAG,IAAI;AACX,YAAMC,QAAQ,GAAGD,GAAG,CAACE,IAAJ,CAASC,GAAT,CAAaC,QAAQ,IAAI;AACxC,cAAMC,SAAS,GAAG;AAAE;AAClBC,UAAAA,EAAE,EAAEF,QAAQ,CAACE,EADG;AAEhBC,UAAAA,SAAS,EAAEH,QAAQ,CAACI,KAFJ;AAGhBC,UAAAA,QAAQ,EAAEL,QAAQ,CAACM,SAHH;AAIhBC,UAAAA,KAAK,EAAGP,QAAQ,CAACQ;AAJD,SAAlB;AAMApB,QAAAA,KAAK,CAACqB,IAAN,CAAW,yBAAX,EAAsCR,SAAtC,EAPwC,CAOS;;AACjD,eAAOA,SAAP;AACD,OATgB,CAAjB;AAWA,WAAKS,QAAL,CAAc;AACZlB,QAAAA,KAAK,EAAEK;AADK,OAAd;AAGD,KAhBH;AAiBD;;AACDc,EAAAA,MAAM,GAAG;AACP;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKvB,KAAjB,EAFO,CAGP;AACA;AACA;;AAEA,wBAEE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,EAIE,KAAKA,KAAL,CAAWE,KAAX,CAAiBO,GAAjB,CAAqBe,IAAI,iBACvB;AAAG,MAAA,GAAG,EAAEA,IAAI,CAACZ,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkBY,IAAI,CAACX,SAAvB,MADF,CAJF,eAyBE;AAAQ,MAAA,OAAO,EAAE,KAAKY,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAzBF,CAFF;AA8BD;;AAzEgD","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nexport default class InitialCall extends Component {\n  state = {\n    isLoading: true,\n    jokes: []\n  };\n\n\n  async componentDidMount() {\n    /**\n     * first check if a record exist\n     * if it does\n     *  retrieve from DB\n     *  set the state\n     * else\n     *  populate DB with all jokes *\n     *  set the state *\n     */\n\n    axios.get('https://official-joke-api.appspot.com/random_ten')\n      .then(res => {\n        const allJokes = res.data.map(jokesObj => {\n          const jkContent = { // create record\n            id: jokesObj.id,\n            firstName: jokesObj.setup,\n            lastName: jokesObj.punchline,\n            email : jokesObj.type\n          }\n          axios.post('/first_api/v1/employees', jkContent) // post to DB\n          return jkContent\n        })\n\n        this.setState({\n          jokes: allJokes\n        })\n      })\n  }\n  render() {\n    // const {employees, isLoading} = this.state;\n    console.log(this.state)\n    // if (isLoading) {\n    //   return <p>Loading...</p>;\n    // }\n\n    return (\n      \n      <div className=\"Initial\">\n      <h1>  </h1>\n\n      {\n        this.state.jokes.map(item => \n          <p key={item.id}>{item.firstName} </p> \n        )\n      }\n\n        {/* <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <div className=\"App-intro\">\n            <h2>Employee List</h2>\n            {employees.map(employee =>\n              <div key={employee.id}>\n                {employee.firstName}\n                <br></br>\n                {employee.lastName}\n                <br></br>\n                {employee.email}\n              </div>\n            )}\n          </div>\n        </header> */}\n\n        <button onClick={this.createJoke}>add someone</button>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}